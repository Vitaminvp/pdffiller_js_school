{"version":3,"sources":["helpers.js","Search.js","Repo.js","App.js","index.js"],"names":["fetchRepo","repoName","url","concat","fetch","then","r","json","fetchRepos","userName","CONSTANTS","SearchComponentState","linksPerPage","Search","state","value","links","activePage","handleSubmit","_callee","e","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","sent","Array","isArray","setState","alert","message","stop","handleInputChange","_ref2","target","handlePageChange","_ref3","getAttribute","Number","isInteger","localStorage","setItem","JSON","stringify","this","search","window","location","params","URLSearchParams","get","localState","getItem","Object","objectSpread","parse","_this$state","react_default","createElement","Fragment","onSubmit","className","Input","placeholder","onChange","Button","animated","type","Content","hidden","visible","Icon","name","List","divided","relaxed","style","maxWidth","margin","slice","map","link","Item","key","id","size","verticalAlign","react_router_dom","to","Header","as","full_name","Description","description","updated_at","stringData","date","Date","Intl","DateTimeFormat","format","convertToData","textAlign","length","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","Math","ceil","onPageChange","Component","Repo","repoInfo","props","match","split","repo","_this$state$repoInfo","_this$state$repoInfo$","default_branch","_this$state$repoInfo$2","network_count","_this$state$repoInfo$3","subscribers_count","_this$state$repoInfo$4","source","_this$state$repoInfo$5","_this$state$repoInfo$6","_this$state$repoInfo$7","html_url","_this$state$repoInfo$8","Message","App","Container","padding","react_router","path","component","exact","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4cdb031.chunk.js","sourcesContent":["export const fetchRepo = repoName => {\r\n  let url = `https://api.github.com/repos/${repoName}`; //https://api.github.com/repos/vitaminvp/CryptocurrencyProject\r\n  return fetch(url).then(r => r.json());\r\n};\r\n\r\nexport const fetchRepos = userName => {\r\n  let url = `https://api.github.com/users/${userName}/repos?page=1&per_page=100`;\r\n\r\n  return fetch(url).then(r => r.json());\r\n};\r\n\r\nexport const convertToData = stringData => {\r\n    const date = new Date(stringData);\r\n    return new Intl.DateTimeFormat('en-GB').format(date);\r\n};\r\n\r\nexport const CONSTANTS={\r\n    SearchComponentState: \"SearchComponentState\",\r\n    linksPerPage: 10\r\n}","import React, { Component } from \"react\";\r\nimport { Input, Button, Icon, List, Pagination } from \"semantic-ui-react\";\r\nimport { CONSTANTS, convertToData, fetchRepos } from \"./helpers\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    value: \"\",\r\n    links: [],\r\n    activePage: 1\r\n  };\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { value } = this.state;\r\n    if (value) {\r\n      const links = await fetchRepos(value);\r\n      if (Array.isArray(links)) {\r\n        this.setState({ links });\r\n      } else {\r\n        alert(links.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleInputChange = ({ target: { value } }) => {\r\n    if (value) {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillUnmount() {\r\n    localStorage.setItem(\r\n      CONSTANTS.SearchComponentState,\r\n      JSON.stringify(this.state)\r\n    );\r\n  }\r\n\r\n  async componentWillMount() {\r\n    const { search } = window.location;\r\n    const params = new URLSearchParams(search);\r\n    const value = params.get(\"username\");\r\n    if (value) {\r\n      const links = await fetchRepos(value);\r\n      if (Array.isArray(links)) {\r\n        this.setState({ links, value });\r\n      } else {\r\n        alert(links.message);\r\n      }\r\n    } else {\r\n      const localState = localStorage.getItem(CONSTANTS.SearchComponentState);\r\n\r\n      if (localState) {\r\n        this.setState({ ...JSON.parse(localState) });\r\n      }\r\n    }\r\n  }\r\n  handlePageChange = ({ target }) => {\r\n    const activePage = target.getAttribute(\"value\");\r\n    if (activePage && Number.isInteger(Number(activePage))) {\r\n      this.setState({ activePage }, () => {\r\n          localStorage.setItem(\r\n              CONSTANTS.SearchComponentState,\r\n              JSON.stringify(this.state)\r\n          );\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { links, value, activePage } = this.state;\r\n    const linksPerPage = CONSTANTS.linksPerPage;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className=\"search-form\">\r\n          <Input\r\n            placeholder=\"Search...\"\r\n            onChange={this.handleInputChange}\r\n            value={value}\r\n            className=\"search-input\"\r\n          />\r\n          <Button animated=\"vertical\" type=\"submit\">\r\n            <Button.Content hidden>Search</Button.Content>\r\n            <Button.Content visible>\r\n              <Icon name=\"search\" />\r\n            </Button.Content>\r\n          </Button>\r\n        </form>\r\n        <List divided relaxed style={{ maxWidth: 560, margin: \"50px auto\" }}>\r\n          {links\r\n            .slice((activePage - 1) * linksPerPage, activePage * linksPerPage)\r\n            .map(link => (\r\n              <List.Item key={link.id}>\r\n                <List.Icon name=\"github\" size=\"large\" verticalAlign=\"middle\" />\r\n                <List.Content>\r\n                  <NavLink to={`/repo/${value}+${link.name}`}>\r\n                    <List.Header as=\"p\">{link.full_name}</List.Header>\r\n                    <List.Description as=\"i\">\r\n                      {link.description}\r\n                    </List.Description>\r\n                    <List.Description as=\"p\">\r\n                      {link.updated_at\r\n                        ? `Updated ${convertToData(link.updated_at)}`\r\n                        : \"\"}\r\n                    </List.Description>\r\n                  </NavLink>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          {links.length > 0 && (\r\n            <Pagination\r\n              boundaryRange={0}\r\n              defaultActivePage={activePage}\r\n              ellipsisItem={null}\r\n              firstItem={null}\r\n              lastItem={null}\r\n              siblingRange={1}\r\n              totalPages={Math.ceil(links.length / linksPerPage)}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\nimport { fetchRepo } from \"./helpers\";\r\n\r\nclass Repo extends Component {\r\n  state = {\r\n    repoInfo: {}\r\n  };\r\n  async componentWillMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    if (id) {\r\n      const [value, repo] = [...id.split(\"+\")];\r\n      if (value && repo) {\r\n        const repoInfo = await fetchRepo(`${value}/${repo}`);\r\n        if (!repoInfo.message) {\r\n          this.setState({ repoInfo });\r\n        } else {\r\n          alert(repoInfo.message);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      default_branch = \"\",\r\n      network_count = \"\",\r\n      subscribers_count = \"\",\r\n      source = {},\r\n      name = \"\",\r\n      full_name = \"\",\r\n      html_url = \"\",\r\n      description = \"\"\r\n    } = this.state.repoInfo;\r\n    return (\r\n      <Message style={{ margin: 50 }}>\r\n        <Message.Header>{name}</Message.Header>\r\n        <Message.Header>{description}</Message.Header>\r\n        <Message.List>\r\n          <Message.Item>Full Name: {full_name}</Message.Item>\r\n          <Message.Item>Url: {html_url}</Message.Item>\r\n          <Message.Item>Default branch: {default_branch}</Message.Item>\r\n          <Message.Item>Network count: {network_count}</Message.Item>\r\n          <Message.Item>Subscribers count: {subscribers_count}</Message.Item>\r\n          <Message.Item>Source: {source.full_name}</Message.Item>\r\n        </Message.List>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Repo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Search from \"./Search\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container } from \"semantic-ui-react\";\nimport Repo from \"./Repo\";\n\nfunction App() {\n  return (\n    <Container style={{ padding: 50 }}>\n      <Router>\n        <Switch>\n          <Route path=\"/repo/:id\" component={Repo} />\n          <Route exact path=\"/\" component={Search} />\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}